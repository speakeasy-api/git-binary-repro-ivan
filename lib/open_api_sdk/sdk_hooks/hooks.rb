# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: false
# frozen_string_literal: true

require_relative './registration'
require_relative './types'


module OpenApiSDK
  module SDKHooks
    class Hooks
      

      
      def initialize
        @sdk_init_hooks = []
        @before_request_hooks = []
        @after_success_hooks = []
        @after_error_hooks = []
        Registration.init_hooks self
      end

      
      def register_sdk_init_hook(hook)
        @sdk_init_hooks << hook
      end

      
      def register_before_request_hook(hook)
        @before_request_hooks << hook
      end

      
      def register_after_success_hook(hook)
        @after_success_hooks << hook
      end

      
      def register_after_error_hook(hook)
        @after_error_hooks << hook
      end

      
      def sdk_init(config:)
        @sdk_init_hooks.each do |hook|
          config = hook.sdk_init(config: config)
        end

        return config
      end

      
      def before_request(hook_ctx:, request:)
        @before_request_hooks.each do |hook|
          request = hook.before_request(hook_ctx: hook_ctx, request: request)
        end

        request
      end

      
      def after_success(hook_ctx:, response:)
        @after_success_hooks.each do |hook|
          response = hook.after_success(hook_ctx: hook_ctx, response: response)
        end

        response
      end

      
      def after_error(error:, hook_ctx:, response:)
        @after_error_hooks.each do |hook|
          response = hook.after_error(error: error, hook_ctx: hook_ctx, response: response)
        end

        response
      end
    end
  end
end
