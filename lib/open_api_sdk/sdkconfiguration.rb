# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: false
# frozen_string_literal: true

require 'faraday'
require 'faraday/multipart'
require 'faraday/retry'
require_relative 'sdk_hooks/hooks'
require_relative 'utils/retries'

module OpenApiSDK
  

  SERVERS = [
    'http://petstore.swagger.io/v2', 
  ].freeze
  
  # Contains the list of servers available to the SDK

  class SDKConfiguration
    

    
    attr_accessor :client

    
    attr_accessor :hooks

    
    attr_accessor :retry_config

    
    attr_accessor :timeout

    
    
    attr_accessor :security_source

    
    
    attr_accessor :server_url

    
    
    attr_accessor :server_idx

    
    
    attr_accessor :language

    
    attr_accessor :openapi_doc_version

    
    attr_accessor :sdk_version

    
    attr_accessor :gen_version

    
    attr_accessor :user_agent

    
    def initialize(client, hooks, retry_config, timeout_ms, petstore_auth, security_source, server_url, server_idx)
      @client = client
      @hooks = hooks
      @retry_config = retry_config
      @server_url = server_url
      @timeout = (timeout_ms.to_f / 1000) unless timeout_ms.nil?
      @server_idx = server_idx.nil? ? 0 : server_idx
      raise StandardError, "Invalid server index #{server_idx}" if @server_idx.negative? || @server_idx >= SERVERS.length
      if !security_source.nil?
        @security_source = security_source
      elsif !petstore_auth.nil?
        @security_source = -> { Models::Components::Security.new(petstore_auth: petstore_auth) }
      end
      @language = 'ruby'
      @openapi_doc_version = '1.0.0'
      @sdk_version = '0.0.5'
      @gen_version = '2.711.1'
      @user_agent = 'speakeasy-sdk/ruby 0.0.5 2.711.1 1.0.0 openapi'
    end

    
    def get_server_details
      return [@server_url.delete_suffix('/'), {}] if !@server_url.nil?
      
      [SERVERS[@server_idx], {}]
    end
  end
end
